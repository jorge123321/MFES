class Transport
types
		public X = nat;
		public Y = nat;
		public Desc = seq of char;
		public DownFloor = nat;
		public UpFloor = nat;
		public Type = <Elevator> | <Stair>; 
instance variables
		public x:X;
		public y:Y;
		public description:Desc;
		public downFloor : DownFloor;
		public upFloor : UpFloor;
		public type : Type;
operations
	-- Create Transport
	public Transport : Transport`X * Transport`Y * Transport`Desc * Transport`DownFloor * Transport`UpFloor * Transport`Type ==> Transport
	Transport(tempX,tempY, desc, tempDown, tempUp, tempType) == (
		x := tempX;
	  y := tempY;
	  description :=desc;
	  downFloor := tempDown;
	  upFloor := tempUp;
	  type := tempType;
	  return self;
	);
	
		--Change X Y, Description, DownFloor, UpFloor and Direction of Transport
	public changeTransport : Transport`X * Transport`Y * Transport`Desc * Transport`DownFloor * Transport`UpFloor * Transport`Type ==> ()
		changeTransport(tempX,tempY, desc, tempDown, tempUp, tempType) == (
			x := tempX;
			y := tempY;
			description := desc;
			downFloor := tempDown;
	  	upFloor := tempUp;
	  	type := tempType;
		);
end Transport