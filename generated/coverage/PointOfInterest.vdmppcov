class PointOfInterest
types
		public Desc = seq of char;
		public Position :: x: nat
											y: nat
											z: nat;

		public Type = <Destination> | <Origin> | <Null> | <Wc> | <Coffee> | <Stair> | <Elevator> | <Wall> ;
		
instance variables
		public position : Position;
		public description : Type := <Null>;
operations
	-- Create point of interest
	public PointOfInterest : nat * nat * nat * PointOfInterest`Type  ==> PointOfInterest
	PointOfInterest(x,y,z,desc) == (
		position := mk_Position(x,y,z);
	  description := desc;
	);
	public SetX: nat ==> () 
		SetX(x) == (position.x := x;); 
	public SetY : nat ==> ()
		SetY(y) == (position.y := y;); 
	public SetZ : nat ==> ()
		SetZ(z) == (position.z := z;); 
	public SetDesc : PointOfInterest`Type ==> ()
		SetDesc(desc) == (description := desc;); 
	public GetX : () ==> nat
		GetX() == (return position.x;);
	public GetY : () ==> nat
		GetY() == (return position.y;);
	public GetZ : () ==> nat
		GetZ() == (return position.z;);
	public GetDesc : () ==> PointOfInterest`Type
		GetDesc() == (return description;);
	
	-- Change position and Description of point of interest 
	public changePoint : nat * nat * nat * PointOfInterest`Type ==> ()
		changePoint(x, y, z, newDesc) == (
			position.x := x;
			position.y := y;
			position.z := z;
			description := newDesc;
		);
	
end PointOfInterest